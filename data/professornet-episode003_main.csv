"Prerequisites"; "In this video we are going to create private network access to connect an Azure Synapse workspace with an azure storage account and an azure SQL database. To reproduce the recipe, you will need: An Azure subscription, an azure SQL Server Database, an azure storage account ADLS v2 and a Synapse Workspace."
"Create_ADLS_LS";"First let’s create a linked service to a storage account. For that, go to the manage tab, linked services, and click on new. Search for data lake and click on Azure data lake storage gen2. For authentication we are going to use the workspace managed identity. Select the subscription and storage account name. The connection failed as expected. We must provide access to the managed identity of the synapse workspace to the storage account. For that, navigate to the storage account, click on access control, and create a new role assignment for the storage blob data contributor role and assign it to the workspace MI. Now test the connection again. This time it succeeded."
"Create_Az_SQL_LS";"For the Azure SQL database let’s do the same procedure. This time search for Azure SQL and select it from the results, then click on continue. Add the database details. We are using SQL authentication for demo purposes but it’s better to use a managed identity. Reenable interactive authoring if required. Upppps, let me correct the server and database name. Now, if you test the connection, it failed because public network access is denied. Navigate to the server, then to the networking section and enable access for other azure services. Now the connection test succeeded."
"Close_fw_az_sql";"Let’s close the public access to the database. For that go to the networking section in the server, disable public network access and click on save."
"Close_public_storage";"Let’s do the same for the storage account in its network settings. Click on disable and then save."
"Test_closed_access";"Time to test the linked services again. Both connections, the Azure SQL database and the ADLS should fail."
"Endpoints_creation";"To reestablish connectivity, we are going to create a new managed by Azure integration runtime. For demo purposes we can use default values. We will add two private endpoints from the integration runtime to the target services. Go to the managed private endpoints section on the management tab. We can start with the ADLS. I am selecting the storage account via subscription. Let’s do the same for the Azure SQL database. The endpoints have a provisioning state and an approval state. Someone with the right privileges must approve these endpoints in the correspondent services. For the storage account in the network settings, go to Private endpoint connections and approve the pending request. For the SQL database do the same. Now the private endpoints are provisioned and approved."
"Test_PE_ And_ LS";"Since we have enabled communication over a private network, the linked services connections should succeed again. We need to select the correct integration runtime and you can even see the managed private endpoint in the linked services edit windows, including its approval status. The same occurs for the Azure SQL database. With that we conclude this demo. I hope you enjoy it. "