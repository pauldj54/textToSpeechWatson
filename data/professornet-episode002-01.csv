"01_Introduction";"Hi everyone, welcome to another video. Today let’s upskill our infrastructure as a code knowledge. In this episode we are going to export the data platform we created in the a previous video as an azure resource manager template ARM. This will allow us to recreate this platform in another resource groups, subscriptions, tenant, etc. We can also use it for learning or demo purposes, where you just delete all resources after your task is accomplished. We are going to review the parametrization of the templates and simplify it to meet our needs. The generated template is not directly usable since the export function hardcode several names and resource settings. First, let’s copy the generated JSON into notepad++ and start explaining all its sections and what we want to change."
"02_arm_template_schema";"At the top level we have the schema of the template, the content version, the template parameters, variables and the resources to be created. "
"03_template_parameters";"The parameters section contains the name of the 3 main resources we deployed: Key vault, Synapse workspace and the underlying Storage account. The spark cluster and the sql pool were created within the synapse workspace."
"04_variables_and_keyvault";"Variables are empty. They can be used to combine or manipulate parameters. The first resource on the list is the azure key vault.The name property is parameterized. Later on, we are going to parameterize the location and the SKU name. Since the data vault is empty, other sections like permissions and secrets are empty as well."
"05_storage_account";"The next service is the storage account for the synapse workspace. The name is parameterized as before. We want to unify the location for every resource later on."
"06_synapse_workspace";"The synapse workspace is created in this section. Name is parameterized as in the previous resources. The identity is of type system assigned, that’s is, a managed identity. The default data lake storage is the one also defined previously in this template. The account url should be parameterize and the file system is using the workspace name. Connectivity endpoints are configure using the workspace name and the subscription. The sql administrator login should be parameterized. Public network access is Enable but only for demo purposes, never in production!"
"07_blob_service";"The blob service for the previously created storage account. Queue, table and file services are included by default in the template. We can get rid of these parts since don‘t need them."
"08_synapse_workspace_properties";"There are some extra objects created with default values for the synapse workspace. We can also delete them as well."
"09_spark_pool";"The name is built using a template parameter. The properties define the size of the cluster, spark version, whether it auto scales or not, and the range of nodes. Auto pause which is crucial to save money, and other basic properties. You can parameterize all that you consider appropriate, but be careful with the valid values and the limitations. "
"10_additional_workspace_settings";"Again, a group of additional synapse workspace settings. For example, the firewall contains one rule that allows all connections. We can leave  the firewall rules as they are and get rid of the other properties."
"11_template_param_file_01";"Both the tenant Id and the resource location could be parameterized using ARM resource functions. We will set their default values using expressions. If you want to change the value at deployment type you will need to add this parameters to the template parameter file."
"12_template_param_file_02";"We want to be able to change the sql administrator login and most important, its password. Note for the password the parameter type is a secure string. We are not providing this parameter in the template parameters file, therefore the console will be ask for it during the deployment."
"13_template_param_file_03";"This is how the template parameters file looks like. Please remember the spark pool name can contain at most 15 alpha numeric characters."
"14_parameters_review";"Now we have all parameters we need to change the name of the main services and the services created within the synapse workspace. Please note the default value for the tenant ID and the location, which are using an ARM expression. No values will be provided from the template parameters file. As explained early, the SQL administrator password is of type secured string."
"15_variables_review";"We have created a variable to calculate the URL of the storage account."
"16_resources_review";"The services section is simplified and only includes the services we need to provision the platform. Please not how the tenant ID and specially the location is harmonized using the correspondent parameters. "
"17_template_parameters_file_review";"Finally, the template parameters file includes only the parameters we want to overwrite. "
"18_template_parameters_file_review";"To deploy the template, we are going to use the Azure C L I. From there we can upload the two required files. "
"19_template_parameters_file_review";"We need a resource group for the services."
"20_template_parameters_file_review";"Finally, we can just create the resources pointing to the template and parameters file."